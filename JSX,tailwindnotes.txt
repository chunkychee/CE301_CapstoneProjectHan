w-screen h-screen #fullscreen
w-[80vh] #vh=viewportheight 80%

#USESTATE
export const Submitted = () => {  
  const [submit,setsubmit] = useState('mario');
  const [age, setAge] = useState(25);

  const handleClick = () => {
      setsubmit('your mum');
      setAge('is 50 yrs old');
  }
}
        

return(
  <div>
       <p>{submit} is {age} years old</p>
      <button onClick={handleClick}>Click me</button>
  </div>
);

nodemon and react are on ES6

The false inside the useState parentheses is the initial state value for the conUserErr state variable.
the initial value of false means that there are NO ERROR with user input when the component is first rendered.
const [conUserErr, setConUserErr] = useState(false);

#how to put bg images in viewpoer: "bg-[url('../src/consultant.png')]"
#how to import images into react: https://www.youtube.com/watch?v=taMJct5oeoI
JWT(JSON web token)



//CLIENT LOGIN  
  app.post('/login', (req, res) => { 
    const query = "SELECT * FROM clientsignup WHERE clientusername = ?";
    const username = req.body.clientusername;
    const password = req.body.clientpassword;
    try {
        db.query(query, [username], async (err, result) => {
            if (err) {
                res.status(500).send({ err: err });
            } else if (result.length == 0) {
                res.status(401).send("INCORRECT USERNAME OR PASSWORD");
            } else {
                const isPasswordCorrect = await bcrypt.compare(password, result[0].clientpassword);
                if (!isPasswordCorrect) {
                    res.status(401).send("INCORRECT PASSWORD");
                } else {
                    res.send(result);
                    console.log(result);
                }
            }
        });
    } catch (error) {
        console.log(error);
        res.status(500).send({ error: error });
    }
});
  